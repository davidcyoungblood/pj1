package com.skillstorm.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.skillstorm.beans.Reimbursement;

public class ReimbursementDAO {

	private Connection connection;

	public ReimbursementDAO() throws SQLException {
		String url = "jdbc:mysql://localhost:3306/reimbursement";
		String username = "root";
		String password = "root";
		this.connection = DriverManager.getConnection(url, username, password);
	}

	public Reimbursement findById(int id) throws SQLException {
		String sql = "select id, status from Reimbursement_status where id = ?";
		PreparedStatement statement = connection.prepareStatement(sql);
		statement.setInt(1, id);
		ResultSet rs = statement.executeQuery();
		if (rs.next()) {
			return new Reimbursement(rs.getInt("id"), rs.getString("status"));
		} else {
			return null;
		}
	}


	public Reimbursement create() throws SQLException {
		Reimbursement reimbursement = null; 
		try {
			String sql = "insert into Expense(Name, Reason, Notes, StatusId) values (?, ?, ?, ?)";
			PreparedStatement statement = this.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
			statement.setString(1, expense.getName());
			statement.setString(2, expense.getReason());
			statement.setString(3, expense.getNotes());

			Reimbursement reimb = new ReimbursementDAO().findById(1);
			statement.setInt(4, reimb.getId());

			statement.executeUpdate();
			ResultSet rs = statement.getGeneratedKeys();
			rs.next();
			int generatedId = rs.getInt(1);
			expense.setId(generatedId);
			expense.setStatus(reimb);
		} catch (SQLException e) {
		};
		return reimbursement; 
		
		
	}
	
	/*
	 * public boolean delete(int id) throws SQLException { String sql =
	 * "delete from Reimbursement_status where Id = ?"; PreparedStatement statement
	 * = connection.prepareStatement(sql); statement.setInt(1, id); return
	 * statement.executeUpdate() == 1;
	 * 
	 * }
	 */

	/*
	 * public boolean update(int id, String str) throws SQLException { String sql =
	 * "update reimbursement_status set status = ? where id = ?"; PreparedStatement
	 * statement = connection.prepareStatement(sql); statement.setString(1, str);
	 * statement.setInt(2, id); return statement.executeUpdate() == 1; }
	 */

}
